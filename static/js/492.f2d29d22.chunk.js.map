{"version":3,"file":"static/js/492.f2d29d22.chunk.js","mappings":"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","sources":["components/Contacts/ContactsForm.jsx","components/Contacts/Container.jsx","components/Spinner/Spinner.jsx","components/Contacts/ContactItem.jsx","components/Contacts/ContactsList.jsx","components/Contacts/Filter.jsx","views/Contacts/Contacts.jsx"],"sourcesContent":["import { Notify } from 'notiflix';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../../redux/contacts/contactsApi';\nimport { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme();\n\nexport const ContactForm = () => {\n  const { data } = useGetContactsQuery();\n  const [addContact, { isLoading: adding, isSuccess }] =\n    useAddContactMutation();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    if (isSuccess) {\n      Notify.success('Contact was added to your phonebook');\n      setName('');\n      setNumber('');\n    }\n  }, [isSuccess]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (data.some(item => item.name.toLowerCase() === name.toLowerCase())) {\n      Notify.warning(`${name} is already in contacts!`);\n      return;\n    }\n\n    addContact({ name, number });\n  };\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 7,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Phonebook\n          </Typography>\n          <Box\n            component=\"form\"\n            sx={{ mt: 1 }}\n            // noValidate\n            autoComplete=\"off\"\n            onSubmit={handleSubmit}\n          >\n            <TextField\n              onChange={handleChange}\n              id=\"name\"\n              label=\"Name\"\n              margin=\"normal\"\n              value={name}\n              fullWidth\n              required\n              name=\"name\"\n              type=\"text\"\n              inputProps={{\n                inputMode: 'text',\n                pattern:\n                  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n              }}\n            />\n\n            <TextField\n              id=\"number\"\n              label=\"Number\"\n              inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\n              fullWidth\n              variant=\"outlined\"\n              onChange={handleChange}\n              value={number}\n              type=\"tel\"\n              name=\"number\"\n              required\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              {adding ? <p>adding...</p> : <p>+ add contact</p>}\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const Container = ({ children }) => <div>{children}</div>;\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import { Rings } from 'react-loader-spinner';\n\nexport const Spinner = () => {\n  return <Rings color=\"#0f0a57\" height={30} width={30} />;\n};\n","import { useRemoveContactMutation } from 'redux/contacts/contactsApi';\nimport { Notify } from 'notiflix';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Button from '@mui/material/Button';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const [removeContact, { isLoading: isRemoving, isSuccess }] =\n    useRemoveContactMutation();\n  useEffect(() => {\n    if (isSuccess) {\n      Notify.success('Contact deleted');\n    }\n  }, [removeContact, isSuccess]);\n  return (\n    <ListItem key={id}>\n      <ListItemText>\n        {name}: {number}\n      </ListItemText>\n      <Button\n        type=\"button\"\n        onClick={() => removeContact(id)}\n        variant=\"outlined\"\n        startIcon={isRemoving ? <Spinner /> : 'Delete'}\n      ></Button>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useGetContactsQuery } from 'redux/contacts/contactsApi';\nimport { ContactItem } from './ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/filterSlice';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport List from '@mui/material/List';\n\nexport const ContactsList = () => {\n  const { data, isLoading } = useGetContactsQuery();\n  const filter = useSelector(selectFilter);\n  return (\n    <List>\n      {isLoading && <Spinner />}\n      {data &&\n        data\n          .filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n          )\n          .map(({ name, id, number }) => {\n            return <ContactItem key={id} name={name} number={number} id={id} />;\n          })}\n    </List>\n  );\n};\n","import { setFilter, selectFilter } from 'redux/contacts/filterSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from '@mui/material/TextField';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nconst theme = createTheme();\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Contacts\n          </Typography>\n          <TextField\n            id=\"search\"\n            label=\"search\"\n            type=\"search\"\n            variant=\"standard\"\n            name=\"filter\"\n            onChange={handleChange}\n            value={filter}\n          />\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n","import { ContactForm } from 'components/Contacts/ContactsForm';\nimport { Container } from 'components/Contacts/Container';\n// import { Title } from 'components/Contacts/Title';\nimport { ContactsList } from 'components/Contacts/ContactsList';\nimport { Filter } from 'components/Contacts/Filter';\n\nconst Contacts = () => {\n  return (\n    <Container>\n      {/* <Title title=\"Phonebook\" /> */}\n      <ContactForm />\n      {/* <Title title=\"Contacts\" /> */}\n      <Filter />\n      <ContactsList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["theme","createTheme","ContactForm","data","useGetContactsQuery","useAddContactMutation","addContact","adding","isLoading","isSuccess","useState","name","setName","number","setNumber","useEffect","Notify","handleChange","e","target","value","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","mt","autoComplete","onSubmit","preventDefault","some","item","toLowerCase","TextField","onChange","id","label","margin","fullWidth","required","type","inputProps","inputMode","pattern","Button","mb","children","Spinner","color","height","width","ContactItem","useRemoveContactMutation","removeContact","isRemoving","ListItem","ListItemText","onClick","startIcon","ContactsList","filter","useSelector","selectFilter","List","contact","includes","map","Filter","dispatch","useDispatch","setFilter"],"sourceRoot":""}